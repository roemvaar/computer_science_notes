---
layout: default
title: Format
parent: Data Structures
nav_order: 1
---

# **Data Structure Name**

## **1. Overview**

* **Definition:** A brief description of the data structure, its key purpose, and how it works.  
* **Use Cases:** 
  * Example: Efficient searching and sorting (e.g., database indexing).
  * Example: Suitable for priority-based tasks (e.g., heaps for priority queues).

---

## **2. Operations and Complexities**

| Operation      | Time Complexity | Notes                                      |
|----------------|-----------------|--------------------------------------------|
| Search         | O(...)          | Details about the operation if applicable |
| Insert         | O(...)          | Special cases (e.g., balanced or unbalanced)|
| Delete         | O(...)          |                                            |

---

## **3. Strengths and Weaknesses**

| **Strengths**                | **Weaknesses**                |
|------------------------------|------------------------------|
| Example: Fast insertions      | Example: Memory overhead     |
| Example: Supports ordered data| Example: Inefficient for...  |

---

## **4. Important Techniques**

* **Technique 1:** Brief explanation (e.g., balancing for AVL Trees).  
* **Technique 2:** Description (e.g., traversal methods like Inorder, Preorder).  
* Add diagrams or pseudocode snippets if necessary.

---

## **5. Must-Know Problems**

* **[Problem 1]():** Brief description of the problem and why it's important.
* **[Problem 2]():** Another key problem and how it tests your understanding.  
* Organize problems into categories if needed (e.g., traversal, searching, etc.).

---

## **6. Common Mistakes**

* Forgetting edge cases like empty/null structures.
* Misunderstanding amortized complexities (e.g., hash table operations).

---

## **7. Cheat Sheet / Key Formulas**

* Key patterns or pseudocode templates.  
* Example: Recursion template for binary tree traversal:

  ```python
  def traverse(node):
      if not node:
          return
      traverse(node.left)
      process(node)
      traverse(node.right)
  ```

## **8. References**

* [GeeksForGeeks: Data Structure]()
* [LeetCode: Data Structure Problems]()
* Any additional links or resources.
